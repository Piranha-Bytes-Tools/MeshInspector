<ResourceDictionary x:Class="MeshInspector.Resources.resources_globals_xaml"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
                    xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:converters1="clr-namespace:MeshInspector.Converters"
                    xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/datagrid">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseDark.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatButton.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/FlatSlider.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedTabControl.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MeshInspector;component/Resources/Icons.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MeshInspector;component/Resources/XContextMenu.xaml"/> 
    </ResourceDictionary.MergedDictionaries>

    <Color x:Key="AccentColor">#FF1A1B1B</Color>
    <Color x:Key="AccentColor2">#FF3F3F46</Color>
    <Color x:Key="AccentColor3">#FF3A3B3B</Color>
    <Color x:Key="AccentColor4">#FF4F4F4F</Color>
    <Color x:Key="SelectColor">#FF5F81B2</Color>
    <SolidColorBrush x:Key="AccentColorBrush" Color="{StaticResource AccentColor}" />
    
    <SolidColorBrush x:Key="AccentSelectedColorBrush" Color="{StaticResource SelectColor}" />
    <SolidColorBrush x:Key="WhiteColorBrush" Color="{StaticResource AccentColor2}" />
    <SolidColorBrush x:Key="TextColor" Color="#FFB9B9B9" />
    <DropShadowEffect x:Key="TextShadow"      ShadowDepth="2"      Direction="330"      Color="Black"      Opacity="0.5"     BlurRadius="1"/>
    <converters:ToUpperConverter x:Key="ToUpperConverter" />
    <converters1:BoolColorConverter x:Key="BoolColorConverter" />
    <Style TargetType="TreeView" x:Key="MetroTree" BasedOn="{StaticResource MetroTreeView}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource MetroTreeViewItem}">
                    <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded,Mode=TwoWay}"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderDownHeaderStyleSmall" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ExpanderDownHeaderStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="1"
                            Padding="{TemplateBinding Padding}">
                        <Grid Background="Transparent"
                              SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="12" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0"
                                              Margin="4,0,0,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="True" />
                            <Ellipse x:Name="Circle"
                                     Grid.Column="1"
                                     Width="12"
                                     Height="12"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Stroke="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Expander}}, Path=Background, Converter={x:Static converters:BackgroundToForegroundConverter.Instance}}" />
                            <Path x:Name="Arrow"
                                  Grid.Column="1"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M 1,1.5 L 4.5,5 L 8,1.5"
                                  SnapsToDevicePixels="false"
                                  Stroke="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Expander}}, Path=Background, Converter={x:Static converters:BackgroundToForegroundConverter.Instance}}"
                                  StrokeThickness="2" />                            
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Arrow" Property="Data" Value="M 1,4.5 L 4.5,1 L 8,4.5" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Circle" Property="Stroke" Value="{DynamicResource GrayBrush2}" />
                            <Setter TargetName="Arrow" Property="Stroke" Value="{DynamicResource GrayBrush2}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Circle" Property="Stroke" Value="{DynamicResource BlackColorBrush}" />
                            <Setter TargetName="Circle" Property="StrokeThickness" Value="2" />
                            <Setter TargetName="Arrow" Property="Stroke" Value="{DynamicResource BlackColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MetroExpanderSmall" TargetType="{x:Type Expander}" BasedOn="{StaticResource MetroExpander}">
        <Setter Property="Margin" Value="3" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="controls:ControlsHelper.HeaderFontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="controls:GroupBoxHelper.HeaderForeground" Value="{x:Null}" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentPresenter Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type Expander}}, Path=Header, Mode=OneWay, Converter={StaticResource ToUpperConverter}}">
                        <TextElement.Foreground>
                            <MultiBinding Converter="{x:Static converters:BackgroundToForegroundConverter.Instance}">
                                <Binding Mode="OneWay" Path="Background" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Expander}}" />
                                <Binding Mode="OneWay" Path="(controls:GroupBoxHelper.HeaderForeground)" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Expander}}" />
                            </MultiBinding>
                        </TextElement.Foreground>
                    </ContentPresenter>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ExpanderRoot">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="DisabledVisualElement" Fill="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="false" Opacity="0" />
                        <DockPanel x:Name="ExpanderRoot">
                            <Border x:Name="HeaderSite" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" DockPanel.Dock="Top">
                                <DockPanel>
                                    <ContentPresenter Margin="{TemplateBinding Padding}"
                                                      Content="{TemplateBinding Header}"
                                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                      RecognizesAccessKey="True"
                                                      TextElement.FontSize="{TemplateBinding controls:ControlsHelper.HeaderFontSize}"
                                                      TextElement.FontStretch="{TemplateBinding controls:ControlsHelper.HeaderFontStretch}"
                                                      TextElement.FontWeight="{TemplateBinding controls:ControlsHelper.HeaderFontWeight}" />
                                    <ToggleButton x:Name="ToggleSite" 
                                                  Margin="2" 
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Background="Transparent"
                                                  BorderBrush="Transparent"
                                                  DockPanel.Dock="Left"
                                                  FocusVisualStyle="{x:Null}"
                                                  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Style="{StaticResource ExpanderDownHeaderStyleSmall}" />                                    
                                </DockPanel>
                            </Border>
                            <Border x:Name="ExpandSite"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1,0,1,1"
                                    DockPanel.Dock="Bottom"
                                    Focusable="false"
                                    Opacity="100"
                                    Visibility="Collapsed">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0,5" StartPoint="0,0">
                                        <GradientStop Color="#0C000000" Offset="0"/>
                                        <GradientStop Color="{StaticResource AccentColor}" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>                                
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Cursor="{TemplateBinding Cursor}" />
                            </Border>
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.25" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.25" Storyboard.TargetName="ExpandSite" Storyboard.TargetProperty="(UIElement.Opacity)" To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MetroControlRight" TargetType="{x:Type TabControl}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>
    <Style TargetType="TabItem"
           x:Key="MetroTabItem">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Padding"
                Value="18,4,18,5" />
        <Setter Property="Margin"
                Value="0,2,0,0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="MinWidth"
                Value="5" />
        <Setter Property="MinHeight"
                Value="4" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{DynamicResource BlackBrush}" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <!-- special property for header font size -->
        <Setter Property="controls:ControlsHelper.HeaderFontSize"
                Value="{DynamicResource TabItemFontSize}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="Border" HorizontalAlignment="Stretch"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            CornerRadius="10,0,0,0"                            
                            >
                        <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch">
                            <StackPanel.Resources>
                                <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                            </StackPanel.Resources>
                            <ContentPresenter x:Name="ContentSite"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextElement.FontSize="15"
                                              TextElement.FontStretch="{TemplateBinding controls:ControlsHelper.HeaderFontStretch}"
                                              TextElement.FontWeight="{TemplateBinding controls:ControlsHelper.HeaderFontWeight}"
                                              TextElement.Foreground="{TemplateBinding Foreground}"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="ContentSite"
                                    Value="{DynamicResource TextColor}" />                            
                            <Setter Property="Background"
                                    TargetName="Border"
                                    Value="{DynamicResource AccentColorBrush}" />
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="false">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="ContentSite"
                                    Value="{DynamicResource DisabledWhiteBrush}" />
                            <Setter Property="Background"
                                    TargetName="Border"
                                    Value="{DynamicResource GrayNormalBrush}" />
                        </Trigger>
                        <Trigger SourceName="ContentSite"
                                 Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="TextElement.Foreground"
                                    TargetName="ContentSite"
                                    Value="{StaticResource TextColor}" />                            
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="ContentSite" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="TextElement.Foreground"
                                    TargetName="ContentSite"
                                    Value="{StaticResource TextColor}" />                            
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="MetroBaseWindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background"
            Value="{DynamicResource TransparentWhiteBrush}" />
        <Setter Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment"
            Value="Center" />
        <Setter Property="VerticalContentAlignment"
            Value="Center" />
        <Setter Property="Padding"
            Value="1" />
        <Setter Property="Margin" Value="6,4,6,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      RecognizesAccessKey="True"
                                      Opacity="0.75" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                             Value="True">
                            <Setter TargetName="contentPresenter"
                                Property="Opacity"
                                Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                             Value="False">
                            <Setter TargetName="contentPresenter"
                                Property="Opacity"
                                Value=".5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                 Value="True">
                <Setter Property="Background"
                    Value="#F6F6F6" />
            </Trigger>
            <Trigger Property="IsPressed"
                 Value="True">
                <Setter Property="Background"
                    Value="{DynamicResource HighlightBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                 Value="false">
                <Setter Property="Foreground"
                    Value="#ADADAD" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver"
                           Value="True" />
                    <Condition Property="Name"
                           Value="PART_Close" />
                </MultiTrigger.Conditions>
                <Setter Property="Background"
                    Value="Red" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type toolkit:DataCell}">
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <Style TargetType="{x:Type toolkit:ColumnManagerCell}">
        <Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextColor}" />
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style TargetType="{x:Type toolkit:ColumnManagerRow}">
        <Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TextColor}" />
    </Style>

    
</ResourceDictionary>
